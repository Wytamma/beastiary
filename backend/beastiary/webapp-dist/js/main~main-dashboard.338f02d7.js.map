{"version":3,"sources":["webpack:///../../../src/components/VList/VListItemAction.ts","webpack:///../../../src/components/VItemGroup/VItemGroup.ts","webpack:///../../../src/components/VList/VListItemGroup.ts","webpack:///../../../src/components/VList/VListItemIcon.ts","webpack:///../../../src/components/VList/VListGroup.ts","webpack:///../../../src/components/VAvatar/VAvatar.ts","webpack:///../../../src/components/VAvatar/index.ts","webpack:///../../../src/components/VList/VListItemAvatar.ts","webpack:///../../../src/components/VList/index.ts","webpack:///../../../src/components/VList/VList.ts","webpack:///../../../src/mixins/bootable/index.ts","webpack:///../../../src/components/VList/VListItem.ts"],"names":["name","functional","render","children","data","VNode","h","BaseItemGroup","mixins","props","activeClass","type","default","mandatory","max","Number","multiple","tag","internalLazyValue","undefined","this","value","items","computed","classes","themeClasses","selectedIndex","selectedItem","indexOf","selectedItems","filter","selectedValues","internalValue","Array","toggleMethod","v","watch","created","console","methods","genData","class","getValue","item","i","onClick","register","index","push","unregister","updateInternalValue","updateItem","updateItemsState","updateMultiple","updateSingle","updateMandatory","val","isSame","$slots","provide","itemGroup","isInGroup","listItemGroup","setTextColor","attrs","role","directives","ripple","appendIcon","color","disabled","group","String","noAction","prependIcon","Boolean","subGroup","isActive","list","listClick","$route","matchRoute","beforeDestroy","click","genIcon","$createElement","VIcon","genAppendIcon","icon","VListItemIcon","staticClass","genHeader","VListItem","inputValue","on","genItems","showLazyContent","genPrependIcon","onRouteChange","to","toggle","_uid","isBooted","left","right","size","roundedClasses","styles","height","minWidth","width","measurableStyles","style","$listeners","setBackgroundColor","horizontal","tile","VListItemActionText","VListItemContent","VListItemTitle","VListItemSubtitle","VList","VListItemAction","VListItemGroup","isInList","inject","isInMenu","isInNav","dense","expand","flat","nav","rounded","subheader","threeLine","twoLine","groups","findIndex","g","content","splice","attrs$","eager","hasContent","baseMixins","Ripple","inheritAttrs","inactive","link","selectable","proxyClass","isClickable","$attrs","hasOwnProperty","e","$el","blur","genAttrs","tabindex","keydown","$scopedSlots","active"],"mappings":"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","file":"js/main~main-dashboard.338f02d7.js","sourcesContent":["// Types\nimport Vue, { VNode } from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'v-list-item-action',\n\n  functional: true,\n\n  render (h, { data, children = [] }): VNode {\n    data.staticClass = data.staticClass ? `v-list-item__action ${data.staticClass}` : 'v-list-item__action'\n    const filteredChild = children.filter(VNode => {\n      return VNode.isComment === false && VNode.text !== ' '\n    })\n    if (filteredChild.length > 1) data.staticClass += ' v-list-item__action--stack'\n\n    return h('div', data, children)\n  },\n})\n","// Styles\nimport './VItemGroup.sass'\n\n// Mixins\nimport Groupable from '../../mixins/groupable'\nimport Proxyable from '../../mixins/proxyable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport { VNode } from 'vue/types'\n\nexport type GroupableInstance = InstanceType<typeof Groupable> & {\n  id?: string\n  to?: any\n  value?: any\n }\n\nexport const BaseItemGroup = mixins(\n  Proxyable,\n  Themeable\n).extend({\n  name: 'base-item-group',\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-item--active',\n    },\n    mandatory: Boolean,\n    max: {\n      type: [Number, String],\n      default: null,\n    },\n    multiple: Boolean,\n    tag: {\n      type: String,\n      default: 'div',\n    },\n  },\n\n  data () {\n    return {\n      // As long as a value is defined, show it\n      // Otherwise, check if multiple\n      // to determine which default to provide\n      internalLazyValue: this.value !== undefined\n        ? this.value\n        : this.multiple ? [] : undefined,\n      items: [] as GroupableInstance[],\n    }\n  },\n\n  computed: {\n    classes (): Record<string, boolean> {\n      return {\n        'v-item-group': true,\n        ...this.themeClasses,\n      }\n    },\n    selectedIndex (): number {\n      return (this.selectedItem && this.items.indexOf(this.selectedItem)) || -1\n    },\n    selectedItem (): GroupableInstance | undefined {\n      if (this.multiple) return undefined\n\n      return this.selectedItems[0]\n    },\n    selectedItems (): GroupableInstance[] {\n      return this.items.filter((item, index) => {\n        return this.toggleMethod(this.getValue(item, index))\n      })\n    },\n    selectedValues (): any[] {\n      if (this.internalValue == null) return []\n\n      return Array.isArray(this.internalValue)\n        ? this.internalValue\n        : [this.internalValue]\n    },\n    toggleMethod (): (v: any) => boolean {\n      if (!this.multiple) {\n        return (v: any) => this.internalValue === v\n      }\n\n      const internalValue = this.internalValue\n      if (Array.isArray(internalValue)) {\n        return (v: any) => internalValue.includes(v)\n      }\n\n      return () => false\n    },\n  },\n\n  watch: {\n    internalValue: 'updateItemsState',\n    items: 'updateItemsState',\n  },\n\n  created () {\n    if (this.multiple && !Array.isArray(this.internalValue)) {\n      consoleWarn('Model must be bound to an array if the multiple property is true.', this)\n    }\n  },\n\n  methods: {\n\n    genData (): object {\n      return {\n        class: this.classes,\n      }\n    },\n    getValue (item: GroupableInstance, i: number): unknown {\n      return item.value == null || item.value === ''\n        ? i\n        : item.value\n    },\n    onClick (item: GroupableInstance) {\n      this.updateInternalValue(\n        this.getValue(item, this.items.indexOf(item))\n      )\n    },\n    register (item: GroupableInstance) {\n      const index = this.items.push(item) - 1\n\n      item.$on('change', () => this.onClick(item))\n\n      // If no value provided and mandatory,\n      // assign first registered item\n      if (this.mandatory && !this.selectedValues.length) {\n        this.updateMandatory()\n      }\n\n      this.updateItem(item, index)\n    },\n    unregister (item: GroupableInstance) {\n      if (this._isDestroyed) return\n\n      const index = this.items.indexOf(item)\n      const value = this.getValue(item, index)\n\n      this.items.splice(index, 1)\n\n      const valueIndex = this.selectedValues.indexOf(value)\n\n      // Items is not selected, do nothing\n      if (valueIndex < 0) return\n\n      // If not mandatory, use regular update process\n      if (!this.mandatory) {\n        return this.updateInternalValue(value)\n      }\n\n      // Remove the value\n      if (this.multiple && Array.isArray(this.internalValue)) {\n        this.internalValue = this.internalValue.filter(v => v !== value)\n      } else {\n        this.internalValue = undefined\n      }\n\n      // If mandatory and we have no selection\n      // add the last item as value\n      /* istanbul ignore else */\n      if (!this.selectedItems.length) {\n        this.updateMandatory(true)\n      }\n    },\n    updateItem (item: GroupableInstance, index: number) {\n      const value = this.getValue(item, index)\n\n      item.isActive = this.toggleMethod(value)\n    },\n    // https://github.com/vuetifyjs/vuetify/issues/5352\n    updateItemsState () {\n      this.$nextTick(() => {\n        if (this.mandatory &&\n          !this.selectedItems.length\n        ) {\n          return this.updateMandatory()\n        }\n\n        // TODO: Make this smarter so it\n        // doesn't have to iterate every\n        // child in an update\n        this.items.forEach(this.updateItem)\n      })\n    },\n    updateInternalValue (value: any) {\n      this.multiple\n        ? this.updateMultiple(value)\n        : this.updateSingle(value)\n    },\n    updateMandatory (last?: boolean) {\n      if (!this.items.length) return\n\n      const items = this.items.slice()\n\n      if (last) items.reverse()\n\n      const item = items.find(item => !item.disabled)\n\n      // If no tabs are available\n      // aborts mandatory value\n      if (!item) return\n\n      const index = this.items.indexOf(item)\n\n      this.updateInternalValue(\n        this.getValue(item, index)\n      )\n    },\n    updateMultiple (value: any) {\n      const defaultValue = Array.isArray(this.internalValue)\n        ? this.internalValue\n        : []\n      const internalValue = defaultValue.slice()\n      const index = internalValue.findIndex(val => val === value)\n\n      if (\n        this.mandatory &&\n        // Item already exists\n        index > -1 &&\n        // value would be reduced below min\n        internalValue.length - 1 < 1\n      ) return\n\n      if (\n        // Max is set\n        this.max != null &&\n        // Item doesn't exist\n        index < 0 &&\n        // value would be increased above max\n        internalValue.length + 1 > this.max\n      ) return\n\n      index > -1\n        ? internalValue.splice(index, 1)\n        : internalValue.push(value)\n\n      this.internalValue = internalValue\n    },\n    updateSingle (value: any) {\n      const isSame = value === this.internalValue\n\n      if (this.mandatory && isSame) return\n\n      this.internalValue = isSame ? undefined : value\n    },\n  },\n\n  render (h): VNode {\n    return h(this.tag, this.genData(), this.$slots.default)\n  },\n})\n\nexport default BaseItemGroup.extend({\n  name: 'v-item-group',\n\n  provide (): object {\n    return {\n      itemGroup: this,\n    }\n  },\n})\n","// Styles\nimport './VListItemGroup.sass'\n\n// Extensions\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\nexport default mixins(\n  BaseItemGroup,\n  Colorable\n).extend({\n  name: 'v-list-item-group',\n\n  provide () {\n    return {\n      isInGroup: true,\n      listItemGroup: this,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-list-item-group': true,\n      }\n    },\n  },\n\n  methods: {\n    genData (): object {\n      return this.setTextColor(this.color, {\n        ...BaseItemGroup.options.methods.genData.call(this),\n        attrs: {\n          role: 'listbox',\n        },\n      })\n    },\n  },\n})\n","// Types\nimport Vue, { VNode } from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'v-list-item-icon',\n\n  functional: true,\n\n  render (h, { data, children }): VNode {\n    data.staticClass = (`v-list-item__icon ${data.staticClass || ''}`).trim()\n\n    return h('div', data, children)\n  },\n})\n","// Styles\nimport './VListGroup.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport VList from './VList'\nimport VListItem from './VListItem'\nimport VListItemIcon from './VListItemIcon'\n\n// Mixins\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport Bootable from '../../mixins/bootable'\nimport Colorable from '../../mixins/colorable'\nimport Toggleable from '../../mixins/toggleable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Transitions\nimport { VExpandTransition } from '../transitions'\n\n// Utils\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { getSlot } from '../../util/helpers'\n\n// Types\nimport { VNode } from 'vue'\nimport { Route } from 'vue-router'\n\nconst baseMixins = mixins(\n  BindsAttrs,\n  Bootable,\n  Colorable,\n  RegistrableInject('list'),\n  Toggleable\n)\n\ntype VListInstance = InstanceType<typeof VList>\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  list: VListInstance\n  $refs: {\n    group: HTMLElement\n  }\n  $route: Route\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-list-group',\n\n  directives: { ripple },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: '',\n    },\n    appendIcon: {\n      type: String,\n      default: '$expand',\n    },\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    disabled: Boolean,\n    group: [String, RegExp],\n    noAction: Boolean,\n    prependIcon: String,\n    ripple: {\n      type: [Boolean, Object],\n      default: true,\n    },\n    subGroup: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-list-group--active': this.isActive,\n        'v-list-group--disabled': this.disabled,\n        'v-list-group--no-action': this.noAction,\n        'v-list-group--sub-group': this.subGroup,\n      }\n    },\n  },\n\n  watch: {\n    isActive (val: boolean) {\n      /* istanbul ignore else */\n      if (!this.subGroup && val) {\n        this.list && this.list.listClick(this._uid)\n      }\n    },\n    $route: 'onRouteChange',\n  },\n\n  created () {\n    this.list && this.list.register(this)\n\n    if (this.group &&\n      this.$route &&\n      this.value == null\n    ) {\n      this.isActive = this.matchRoute(this.$route.path)\n    }\n  },\n\n  beforeDestroy () {\n    this.list && this.list.unregister(this)\n  },\n\n  methods: {\n    click (e: Event) {\n      if (this.disabled) return\n\n      this.isBooted = true\n\n      this.$emit('click', e)\n      this.$nextTick(() => (this.isActive = !this.isActive))\n    },\n    genIcon (icon: string | false): VNode {\n      return this.$createElement(VIcon, icon)\n    },\n    genAppendIcon (): VNode | null {\n      const icon = !this.subGroup ? this.appendIcon : false\n\n      if (!icon && !this.$slots.appendIcon) return null\n\n      return this.$createElement(VListItemIcon, {\n        staticClass: 'v-list-group__header__append-icon',\n      }, [\n        this.$slots.appendIcon || this.genIcon(icon),\n      ])\n    },\n    genHeader (): VNode {\n      return this.$createElement(VListItem, {\n        staticClass: 'v-list-group__header',\n        attrs: {\n          'aria-expanded': String(this.isActive),\n          role: 'button',\n        },\n        class: {\n          [this.activeClass]: this.isActive,\n        },\n        props: {\n          inputValue: this.isActive,\n        },\n        directives: [{\n          name: 'ripple',\n          value: this.ripple,\n        }],\n        on: {\n          ...this.listeners$,\n          click: this.click,\n        },\n      }, [\n        this.genPrependIcon(),\n        this.$slots.activator,\n        this.genAppendIcon(),\n      ])\n    },\n    genItems (): VNode[] {\n      return this.showLazyContent(() => [\n        this.$createElement('div', {\n          staticClass: 'v-list-group__items',\n          directives: [{\n            name: 'show',\n            value: this.isActive,\n          }],\n        }, getSlot(this)),\n      ])\n    },\n    genPrependIcon (): VNode | null {\n      const icon = this.subGroup && this.prependIcon == null\n        ? '$subgroup'\n        : this.prependIcon\n\n      if (!icon && !this.$slots.prependIcon) return null\n\n      return this.$createElement(VListItemIcon, {\n        staticClass: 'v-list-group__header__prepend-icon',\n      }, [\n        this.$slots.prependIcon || this.genIcon(icon),\n      ])\n    },\n    onRouteChange (to: Route) {\n      /* istanbul ignore if */\n      if (!this.group) return\n\n      const isActive = this.matchRoute(to.path)\n\n      /* istanbul ignore else */\n      if (isActive && this.isActive !== isActive) {\n        this.list && this.list.listClick(this._uid)\n      }\n\n      this.isActive = isActive\n    },\n    toggle (uid: number) {\n      const isActive = this._uid === uid\n\n      if (isActive) this.isBooted = true\n      this.$nextTick(() => (this.isActive = isActive))\n    },\n    matchRoute (to: string) {\n      return to.match(this.group) !== null\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.setTextColor(this.isActive && this.color, {\n      staticClass: 'v-list-group',\n      class: this.classes,\n    }), [\n      this.genHeader(),\n      h(VExpandTransition, this.genItems()),\n    ])\n  },\n})\n","import './VAvatar.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Measurable from '../../mixins/measurable'\nimport Roundable from '../../mixins/roundable'\n\n// Utilities\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\nexport default mixins(\n  Colorable,\n  Measurable,\n  Roundable,\n  /* @vue/component */\n).extend({\n  name: 'v-avatar',\n\n  props: {\n    left: Boolean,\n    right: Boolean,\n    size: {\n      type: [Number, String],\n      default: 48,\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-avatar--left': this.left,\n        'v-avatar--right': this.right,\n        ...this.roundedClasses,\n      }\n    },\n    styles (): object {\n      return {\n        height: convertToUnit(this.size),\n        minWidth: convertToUnit(this.size),\n        width: convertToUnit(this.size),\n        ...this.measurableStyles,\n      }\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-avatar',\n      class: this.classes,\n      style: this.styles,\n      on: this.$listeners,\n    }\n\n    return h('div', this.setBackgroundColor(this.color, data), this.$slots.default)\n  },\n})\n","import VAvatar from './VAvatar'\n\nexport { VAvatar }\nexport default VAvatar\n","// Components\nimport VAvatar from '../VAvatar'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default VAvatar.extend({\n  name: 'v-list-item-avatar',\n\n  props: {\n    horizontal: Boolean,\n    size: {\n      type: [Number, String],\n      default: 40,\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-list-item__avatar--horizontal': this.horizontal,\n        ...VAvatar.options.computed.classes.call(this),\n        'v-avatar--tile': this.tile || this.horizontal,\n      }\n    },\n  },\n\n  render (h): VNode {\n    const render = VAvatar.options.render.call(this, h)\n\n    render.data = render.data || {}\n    render.data.staticClass += ' v-list-item__avatar'\n\n    return render\n  },\n})\n","import { createSimpleFunctional } from '../../util/helpers'\n\nimport VList from './VList'\nimport VListGroup from './VListGroup'\nimport VListItem from './VListItem'\nimport VListItemGroup from './VListItemGroup'\nimport VListItemAction from './VListItemAction'\nimport VListItemAvatar from './VListItemAvatar'\nimport VListItemIcon from './VListItemIcon'\n\nexport const VListItemActionText = createSimpleFunctional('v-list-item__action-text', 'span')\nexport const VListItemContent = createSimpleFunctional('v-list-item__content', 'div')\nexport const VListItemTitle = createSimpleFunctional('v-list-item__title', 'div')\nexport const VListItemSubtitle = createSimpleFunctional('v-list-item__subtitle', 'div')\n\nexport {\n  VList,\n  VListGroup,\n  VListItem,\n  VListItemAction,\n  VListItemAvatar,\n  VListItemIcon,\n  VListItemGroup,\n}\n\nexport default {\n  $_vuetify_subcomponents: {\n    VList,\n    VListGroup,\n    VListItem,\n    VListItemAction,\n    VListItemActionText,\n    VListItemAvatar,\n    VListItemContent,\n    VListItemGroup,\n    VListItemIcon,\n    VListItemSubtitle,\n    VListItemTitle,\n  },\n}\n","// Styles\nimport './VList.sass'\nimport VListGroup from './VListGroup'\n\n// Components\nimport VSheet from '../VSheet/VSheet'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VListGroupInstance = InstanceType<typeof VListGroup>\n\ninterface options extends InstanceType<typeof VSheet> {\n  isInMenu: boolean\n  isInNav: boolean\n}\n\n/* @vue/component */\nexport default VSheet.extend<options>().extend({\n  name: 'v-list',\n\n  provide (): object {\n    return {\n      isInList: true,\n      list: this,\n    }\n  },\n\n  inject: {\n    isInMenu: {\n      default: false,\n    },\n    isInNav: {\n      default: false,\n    },\n  },\n\n  props: {\n    dense: Boolean,\n    disabled: Boolean,\n    expand: Boolean,\n    flat: Boolean,\n    nav: Boolean,\n    rounded: Boolean,\n    subheader: Boolean,\n    threeLine: Boolean,\n    twoLine: Boolean,\n  },\n\n  data: () => ({\n    groups: [] as VListGroupInstance[],\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSheet.options.computed.classes.call(this),\n        'v-list--dense': this.dense,\n        'v-list--disabled': this.disabled,\n        'v-list--flat': this.flat,\n        'v-list--nav': this.nav,\n        'v-list--rounded': this.rounded,\n        'v-list--subheader': this.subheader,\n        'v-list--two-line': this.twoLine,\n        'v-list--three-line': this.threeLine,\n      }\n    },\n  },\n\n  methods: {\n    register (content: VListGroupInstance) {\n      this.groups.push(content)\n    },\n    unregister (content: VListGroupInstance) {\n      const index = this.groups.findIndex(g => g._uid === content._uid)\n\n      if (index > -1) this.groups.splice(index, 1)\n    },\n    listClick (uid: number) {\n      if (this.expand) return\n\n      for (const group of this.groups) {\n        group.toggle(uid)\n      }\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-list',\n      class: this.classes,\n      style: this.styles,\n      attrs: {\n        role: this.isInNav || this.isInMenu ? undefined : 'list',\n        ...this.attrs$,\n      },\n    }\n\n    return h(this.tag, this.setBackgroundColor(this.color, data), [this.$slots.default])\n  },\n})\n","// Utilities\nimport { removed } from '../../util/console'\n\n// Types\nimport Vue, { VNode } from 'vue'\ninterface Toggleable extends Vue {\n  isActive?: boolean\n}\n\n/**\n * Bootable\n * @mixin\n *\n * Used to add lazy content functionality to components\n * Looks for change in \"isActive\" to automatically boot\n * Otherwise can be set manually\n */\n/* @vue/component */\nexport default Vue.extend<Vue & Toggleable>().extend({\n  name: 'bootable',\n\n  props: {\n    eager: Boolean,\n  },\n\n  data: () => ({\n    isBooted: false,\n  }),\n\n  computed: {\n    hasContent (): boolean | undefined {\n      return this.isBooted || this.eager || this.isActive\n    },\n  },\n\n  watch: {\n    isActive () {\n      this.isBooted = true\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if ('lazy' in this.$attrs) {\n      removed('lazy', this)\n    }\n  },\n\n  methods: {\n    showLazyContent (content?: () => VNode[]): VNode[] {\n      return (this.hasContent && content) ? content() : [this.$createElement()]\n    },\n  },\n})\n","// Styles\nimport './VListItem.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Routable from '../../mixins/routable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\n\n// Directives\nimport Ripple from '../../directives/ripple'\n\n// Utilities\nimport { keyCodes } from './../../util/helpers'\nimport { ExtractVue } from './../../util/mixins'\nimport { removed } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode } from 'vue'\nimport { PropType, PropValidator } from 'vue/types/options'\n\nconst baseMixins = mixins(\n  Colorable,\n  Routable,\n  Themeable,\n  GroupableFactory('listItemGroup'),\n  ToggleableFactory('inputValue')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  isInGroup: boolean\n  isInList: boolean\n  isInMenu: boolean\n  isInNav: boolean\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-list-item',\n\n  directives: {\n    Ripple,\n  },\n\n  inject: {\n    isInGroup: {\n      default: false,\n    },\n    isInList: {\n      default: false,\n    },\n    isInMenu: {\n      default: false,\n    },\n    isInNav: {\n      default: false,\n    },\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.listItemGroup) return ''\n\n        return this.listItemGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    dense: Boolean,\n    inactive: Boolean,\n    link: Boolean,\n    selectable: {\n      type: Boolean,\n    },\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    threeLine: Boolean,\n    twoLine: Boolean,\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-list-item--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-list-item': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-list-item--dense': this.dense,\n        'v-list-item--disabled': this.disabled,\n        'v-list-item--link': this.isClickable && !this.inactive,\n        'v-list-item--selectable': this.selectable,\n        'v-list-item--three-line': this.threeLine,\n        'v-list-item--two-line': this.twoLine,\n        ...this.themeClasses,\n      }\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.listItemGroup\n      )\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('avatar')) {\n      removed('avatar', this)\n    }\n  },\n\n  methods: {\n    click (e: MouseEvent | KeyboardEvent) {\n      if (e.detail) this.$el.blur()\n\n      this.$emit('click', e)\n\n      this.to || this.toggle()\n    },\n    genAttrs () {\n      const attrs: Record<string, any> = {\n        'aria-disabled': this.disabled ? true : undefined,\n        tabindex: this.isClickable && !this.disabled ? 0 : -1,\n        ...this.$attrs,\n      }\n\n      if (this.$attrs.hasOwnProperty('role')) {\n        // do nothing, role already provided\n      } else if (this.isInNav) {\n        // do nothing, role is inherit\n      } else if (this.isInGroup) {\n        attrs.role = 'option'\n        attrs['aria-selected'] = String(this.isActive)\n      } else if (this.isInMenu) {\n        attrs.role = this.isClickable ? 'menuitem' : undefined\n        attrs.id = attrs.id || `list-item-${this._uid}`\n      } else if (this.isInList) {\n        attrs.role = 'listitem'\n      }\n\n      return attrs\n    },\n  },\n\n  render (h): VNode {\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      ...this.genAttrs(),\n    }\n    data[this.to ? 'nativeOn' : 'on'] = {\n      ...data[this.to ? 'nativeOn' : 'on'],\n      keydown: (e: KeyboardEvent) => {\n        /* istanbul ignore else */\n        if (e.keyCode === keyCodes.enter) this.click(e)\n\n        this.$emit('keydown', e)\n      },\n    }\n\n    if (this.inactive) tag = 'div'\n    if (this.inactive && this.to) {\n      data.on = data.nativeOn\n      delete data.nativeOn\n    }\n\n    const children = this.$scopedSlots.default\n      ? this.$scopedSlots.default({\n        active: this.isActive,\n        toggle: this.toggle,\n      })\n      : this.$slots.default\n\n    return h(tag, this.isActive ? this.setTextColor(this.color, data) : data, children)\n  },\n})\n"],"sourceRoot":""}